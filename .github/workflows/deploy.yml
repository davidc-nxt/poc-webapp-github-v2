name: Build and Deploy

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: public.ecr.aws
  IMAGE_NAME: poc-webapp-github
  GITOPS_REPO: poc-gitops-manifests

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout application code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      
      - name: Build and push Docker image
        run: |
          # Get ECR repository URI
          REPO_URI=$(aws ecr-public describe-repositories --repository-names ${{ env.IMAGE_NAME }} --region us-east-1 --query 'repositories[0].repositoryUri' --output text)
          IMAGE_URI=$REPO_URI:${{ github.sha }}
          
          # Build image with metadata
          docker build \
            --build-arg CI_PLATFORM=github \
            --build-arg COMMIT_SHA=${{ github.sha }} \
            --build-arg BUILD_TIME=${{ github.event.head_commit.timestamp }} \
            --build-arg APP_VERSION=1.0.0 \
            --build-arg IMAGE_NAME=$IMAGE_URI \
            -t $IMAGE_URI \
            -t $REPO_URI:latest .
          
          # Push images to ECR Public
          docker push $IMAGE_URI
          docker push $REPO_URI:latest
          
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
      
      - name: Update GitOps repository
        run: |
          # Clone GitOps repository using GitHub token
          git clone https://${{ secrets.GITOPS_TOKEN }}@github.com/${{ github.repository_owner }}/${{ env.GITOPS_REPO }}.git gitops
          cd gitops
          
          # Update image tag in GitHub app manifest
          sed -i "s|image: .*/${{ env.IMAGE_NAME }}:.*|image: ${{ env.IMAGE_URI }}|g" k8s-manifests/github/deployment.yaml
          
          # Commit and push changes to trigger Argo CD sync
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add k8s-manifests/github/deployment.yaml
          git commit -m "ðŸš€ Update GitHub app image to ${{ github.sha }}"
          git push origin main
      
      - name: Deployment summary
        run: |
          echo "âœ… **Deployment Summary**" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: GitHub" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ env.IMAGE_URI }}" >> $GITHUB_STEP_SUMMARY
          echo "- **GitOps Updated**: âœ…" >> $GITHUB_STEP_SUMMARY
          echo "- **Next**: Argo CD will automatically deploy" >> $GITHUB_STEP_SUMMARY 